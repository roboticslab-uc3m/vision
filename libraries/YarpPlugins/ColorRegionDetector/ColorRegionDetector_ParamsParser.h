/*
 * SPDX-FileCopyrightText: 2023-2023 Istituto Italiano di Tecnologia (IIT)
 * SPDX-License-Identifier: LGPL-2.1-or-later
 */


// Generated by yarpDeviceParamParserGenerator (1.0)
// This is an automatically generated file. Please do not edit it.
// It will be re-generated if the cmake flag ALLOW_DEVICE_PARAM_PARSER_GERNERATION is ON.

// Generated on: Thu Apr 17 19:21:21 2025


#ifndef COLORREGIONDETECTOR_PARAMSPARSER_H
#define COLORREGIONDETECTOR_PARAMSPARSER_H

#include <yarp/os/Searchable.h>
#include <yarp/dev/IDeviceDriverParams.h>
#include <string>
#include <cmath>

/**
* This class is the parameters parser for class ColorRegionDetector.
*
* These are the used parameters:
* | Group name | Parameter name | Type   | Units | Default Value | Required | Description             | Notes                                                                                    |
* |:----------:|:--------------:|:------:|:-----:|:-------------:|:--------:|:-----------------------:|:----------------------------------------------------------------------------------------:|
* | -          | algorithm      | string | -     | blueMinusRed  | 0        | detection algorithm     | redMinusGreen, redMinusBlue, greenMinusRed, greenMinusBlue, blueMinusRed, blueMinusGreen |
* | -          | morphClosing   | double | -     | 2.0           | 0        | morphological closure   | -                                                                                        |
* | -          | threshold      | int    | -     | 55            | 0        | binarization threshold  | -                                                                                        |
* | -          | maxNumBlobs    | int    | -     | 1             | 0        | maximum number of blobs | -                                                                                        |
*
* The device can be launched by yarpdev using one of the following examples (with and without all optional parameters):
* \code{.unparsed}
* yarpdev --device ColorRegionDetector --algorithm blueMinusRed --morphClosing 2.0 --threshold 55 --maxNumBlobs 1
* \endcode
*
* \code{.unparsed}
* yarpdev --device ColorRegionDetector
* \endcode
*
*/

class ColorRegionDetector_ParamsParser : public yarp::dev::IDeviceDriverParams
{
public:
    ColorRegionDetector_ParamsParser();
    ~ColorRegionDetector_ParamsParser() override = default;

public:
    const std::string m_device_classname = {"ColorRegionDetector"};
    const std::string m_device_name = {"ColorRegionDetector"};
    bool m_parser_is_strict = false;
    struct parser_version_type
    {
         int major = 1;
         int minor = 0;
    };
    const parser_version_type m_parser_version = {};

    const std::string m_algorithm_defaultValue = {"blueMinusRed"};
    const std::string m_morphClosing_defaultValue = {"2.0"};
    const std::string m_threshold_defaultValue = {"55"};
    const std::string m_maxNumBlobs_defaultValue = {"1"};

    std::string m_algorithm = {"blueMinusRed"};
    double m_morphClosing = {2.0};
    int m_threshold = {55};
    int m_maxNumBlobs = {1};

    bool          parseParams(const yarp::os::Searchable & config) override;
    std::string   getDeviceClassName() const override { return m_device_classname; }
    std::string   getDeviceName() const override { return m_device_name; }
    std::string   getDocumentationOfDeviceParams() const override;
    std::vector<std::string> getListOfParams() const override;
};

#endif
